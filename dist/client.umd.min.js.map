{"version":3,"file":"client.umd.min.js","sources":["../src/client.js","../src/shared.js"],"sourcesContent":["import { encodeMessage, decodeMessage } from './shared.js';\r\n\r\nexport function createClient(url, options = {}) {\r\n  const {\r\n    reconnect = true,\r\n    reconnectInterval = 2000,\r\n    maxRetries = 10,\r\n    debug = false,\r\n  } = options;\r\n\r\n  let socket;\r\n  const listeners = {};\r\n  let isConnected = false;\r\n  let retryCount = 0;\r\n\r\n  function log(...args) {\r\n    if (debug) console.log('[WebSocketClient]', ...args);\r\n  }\r\n\r\n  function connect() {\r\n    socket = new WebSocket(url);\r\n\r\n    socket.onopen = () => {\r\n      isConnected = true;\r\n      retryCount = 0;\r\n      log('Connected');\r\n      if (listeners['connect']) listeners['connect'].forEach(fn => fn());\r\n    };\r\n\r\n    socket.onmessage = (e) => {\r\n      const msg = decodeMessage(e.data);\r\n      if (msg && listeners[msg.event]) {\r\n        listeners[msg.event].forEach(fn => fn(msg.data));\r\n      }\r\n    };\r\n\r\n    socket.onerror = (err) => {\r\n      if (listeners['error']) listeners['error'].forEach(fn => fn(err));\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      isConnected = false;\r\n      log('Disconnected');\r\n      if (listeners['disconnect']) listeners['disconnect'].forEach(fn => fn());\r\n      if (reconnect && retryCount < maxRetries) {\r\n        retryCount++;\r\n        setTimeout(() => connect(), reconnectInterval * retryCount);\r\n      }\r\n    };\r\n  }\r\n\r\n  connect();\r\n\r\n  return {\r\n    emit(event, data) {\r\n      if (isConnected) socket.send(encodeMessage(event, data));\r\n    },\r\n\r\n    emitWithAck(event, data, timeout = 2000) {\r\n      return new Promise((resolve, reject) => {\r\n        const id = Date.now().toString();\r\n        const ackEvent = `${event}_ack_${id}`;\r\n\r\n        const handler = (res) => {\r\n          resolve(res);\r\n          this.off(ackEvent);\r\n        };\r\n\r\n        this.on(ackEvent, handler);\r\n        this.emit(event, { ...data, _ackId: id });\r\n\r\n        setTimeout(() => {\r\n          this.off(ackEvent);\r\n          reject('Timeout');\r\n        }, timeout);\r\n      });\r\n    },\r\n\r\n    on(event, handler) {\r\n      if (!listeners[event]) listeners[event] = [];\r\n      listeners[event].push(handler);\r\n    },\r\n\r\n    once(event, handler) {\r\n      const wrapper = (data) => {\r\n        handler(data);\r\n        this.off(event, wrapper);\r\n      };\r\n      this.on(event, wrapper);\r\n    },\r\n\r\n    off(event, handler) {\r\n      if (!listeners[event]) return;\r\n      if (!handler) {\r\n        delete listeners[event];\r\n      } else {\r\n        listeners[event] = listeners[event].filter(fn => fn !== handler);\r\n      }\r\n    },\r\n\r\n    getStatus() {\r\n      return isConnected ? 'connected' : 'disconnected';\r\n    }\r\n  };\r\n}","export function encodeMessage(event, data) {\r\n  return JSON.stringify({ event, data });\r\n}\r\n\r\nexport function decodeMessage(msg) {\r\n  try {\r\n    return JSON.parse(msg);\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n"],"names":["url","options","reconnect","reconnectInterval","maxRetries","debug","socket","listeners","isConnected","retryCount","log","args","console","connect","WebSocket","onopen","forEach","fn","onmessage","e","msg","JSON","parse","decodeMessage","data","event","onerror","err","onclose","setTimeout","emit","send","stringify","encodeMessage","emitWithAck","timeout","Promise","resolve","reject","id","Date","now","toString","ackEvent","this","on","res","off","_ackId","handler","push","once","wrapper","filter","getStatus"],"mappings":"8PAEO,SAAsBA,EAAKC,EAAU,IAC1C,MAAMC,UACJA,GAAY,EAAIC,kBAChBA,EAAoB,IAAIC,WACxBA,EAAa,GAAEC,MACfA,GAAQ,GACNJ,EAEJ,IAAIK,EACJ,MAAMC,EAAY,CAAA,EAClB,IAAIC,GAAc,EACdC,EAAa,EAEjB,SAASC,KAAOC,GACVN,GAAOO,QAAQF,IAAI,uBAAwBC,EAChD,CAoCD,OAlCA,SAASE,IACPP,EAAS,IAAIQ,UAAUd,GAEvBM,EAAOS,OAAS,KACdP,GAAc,EACdC,EAAa,EACbC,EAAI,aACAH,EAAmB,SAAGA,EAAmB,QAAES,SAAQC,GAAMA,OAG/DX,EAAOY,UAAaC,IAClB,MAAMC,EC1BL,SAAuBA,GAC5B,IACE,OAAOC,KAAKC,MAAMF,EACnB,CAAC,MAAOD,GACP,OAAO,IACR,CACH,CDoBkBI,CAAcJ,EAAEK,MACxBJ,GAAOb,EAAUa,EAAIK,QACvBlB,EAAUa,EAAIK,OAAOT,SAAQC,GAAMA,EAAGG,EAAII,SAI9ClB,EAAOoB,QAAWC,IACZpB,EAAiB,OAAGA,EAAiB,MAAES,SAAQC,GAAMA,EAAGU,MAG9DrB,EAAOsB,QAAU,KACfpB,GAAc,EACdE,EAAI,gBACAH,EAAsB,YAAGA,EAAsB,WAAES,SAAQC,GAAMA,MAC/Df,GAAaO,EAAaL,IAC5BK,IACAoB,YAAW,IAAMhB,KAAWV,EAAoBM,IAGrD,CAEDI,GAEO,CACL,IAAAiB,CAAKL,EAAOD,GACNhB,GAAaF,EAAOyB,KCvDvB,SAAuBN,EAAOD,GACnC,OAAOH,KAAKW,UAAU,CAAEP,QAAOD,QACjC,CDqDmCS,CAAcR,EAAOD,GACnD,EAED,WAAAU,CAAYT,EAAOD,EAAMW,EAAU,KACjC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAKC,KAAKC,MAAMC,WAChBC,EAAW,GAAGlB,SAAac,IAOjCK,KAAKC,GAAGF,GALSG,IACfT,EAAQS,GACRF,KAAKG,IAAIJ,MAIXC,KAAKd,KAAKL,EAAO,IAAKD,EAAMwB,OAAQT,IAEpCV,YAAW,KACTe,KAAKG,IAAIJ,GACTL,EAAO,aACNH,KAEN,EAED,EAAAU,CAAGpB,EAAOwB,GACH1C,EAAUkB,KAAQlB,EAAUkB,GAAS,IAC1ClB,EAAUkB,GAAOyB,KAAKD,EACvB,EAED,IAAAE,CAAK1B,EAAOwB,GACV,MAAMG,EAAW5B,IACfyB,EAAQzB,GACRoB,KAAKG,IAAItB,EAAO2B,IAElBR,KAAKC,GAAGpB,EAAO2B,EAChB,EAED,GAAAL,CAAItB,EAAOwB,GACJ1C,EAAUkB,KACVwB,EAGH1C,EAAUkB,GAASlB,EAAUkB,GAAO4B,QAAOpC,GAAMA,IAAOgC,WAFjD1C,EAAUkB,GAIpB,EAED6B,UAAS,IACA9C,EAAc,YAAc,eAGzC"}